services:
  # this is the ghost container - nothing needs to be changed here if only running a single ghost instance
  ghost:
    container_name: ghost
    image: ghost:5
    restart: always

    # ports are not exposed because we will use the reverse proxy to expose the website
    # ports:
    #   - 8080:2368
    environment:
      # see https://ghost.org/docs/config/#configuration-options

      # databse config
      database__client: mysql
      database__connection__host: ghost-db
      database__connection__user: root
      database__connection__password: ${DBPASS}
      database__connection__database: ${DBTABLE}

      # public URL
      url: ${URL}

      # email using SMTP through Gmail - no good for newsletters but fine for transactional messages
      mail__transport: SMTP
      mail__options__service: SMTP
      mail__from: ${EMAILADDR}
      mail__options__host: ${SMTP}
      mail__options__port: 587
      mail__options__auth__user: ${EMAILADDR}
      mail__options__auth__pass: ${EMAILPASS}

    volumes:
      - ./ghost:/var/lib/ghost/content
    networks:
      - frontend
      - ghost-db_net

  # the ghost DB will be fine as-is, even when running multiple ghost instances off one DB
  # To-Do: Setup multi-user for running multiple ghost instances
  ghost-db:
    container_name: ghost-db
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DBPASS}
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - ghost-backend

  # use cloudflared if you don't have another reverse proxy already or do not
  # have a public IP address to share your blog from
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      - frontend

networks:
  ghost-backend:
  frontend:
    # external: true
# if you plan to use cloudflared as a reverse proxy for services running in other
# stacks, or your reverse proxy is already running in another stack using the
# docker network "frontend," then the network "frontend" should already be created
# on the host and "external: true" needs to be uncommented
